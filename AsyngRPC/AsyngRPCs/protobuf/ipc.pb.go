// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipc.proto

package ipcgrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 요청 메시지
type IpcRequest struct {
	Bsreq                []byte   `protobuf:"bytes,1,opt,name=bsreq,proto3" json:"bsreq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpcRequest) Reset()         { *m = IpcRequest{} }
func (m *IpcRequest) String() string { return proto.CompactTextString(m) }
func (*IpcRequest) ProtoMessage()    {}
func (*IpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ipc_7f394efc4e3a878d, []int{0}
}
func (m *IpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpcRequest.Unmarshal(m, b)
}
func (m *IpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpcRequest.Marshal(b, m, deterministic)
}
func (dst *IpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpcRequest.Merge(dst, src)
}
func (m *IpcRequest) XXX_Size() int {
	return xxx_messageInfo_IpcRequest.Size(m)
}
func (m *IpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IpcRequest proto.InternalMessageInfo

func (m *IpcRequest) GetBsreq() []byte {
	if m != nil {
		return m.Bsreq
	}
	return nil
}

// 응답 메시지
type IpcReply struct {
	Bsres                []byte   `protobuf:"bytes,1,opt,name=bsres,proto3" json:"bsres,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpcReply) Reset()         { *m = IpcReply{} }
func (m *IpcReply) String() string { return proto.CompactTextString(m) }
func (*IpcReply) ProtoMessage()    {}
func (*IpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ipc_7f394efc4e3a878d, []int{1}
}
func (m *IpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpcReply.Unmarshal(m, b)
}
func (m *IpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpcReply.Marshal(b, m, deterministic)
}
func (dst *IpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpcReply.Merge(dst, src)
}
func (m *IpcReply) XXX_Size() int {
	return xxx_messageInfo_IpcReply.Size(m)
}
func (m *IpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_IpcReply proto.InternalMessageInfo

func (m *IpcReply) GetBsres() []byte {
	if m != nil {
		return m.Bsres
	}
	return nil
}

func init() {
	proto.RegisterType((*IpcRequest)(nil), "ipcgrpc.IpcRequest")
	proto.RegisterType((*IpcReply)(nil), "ipcgrpc.IpcReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IpcgrpcClient is the client API for Ipcgrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IpcgrpcClient interface {
	SendData(ctx context.Context, opts ...grpc.CallOption) (Ipcgrpc_SendDataClient, error)
}

type ipcgrpcClient struct {
	cc *grpc.ClientConn
}

func NewIpcgrpcClient(cc *grpc.ClientConn) IpcgrpcClient {
	return &ipcgrpcClient{cc}
}

func (c *ipcgrpcClient) SendData(ctx context.Context, opts ...grpc.CallOption) (Ipcgrpc_SendDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Ipcgrpc_serviceDesc.Streams[0], "/ipcgrpc.Ipcgrpc/SendData", opts...)
	if err != nil {
		return nil, err
	}
	x := &ipcgrpcSendDataClient{stream}
	return x, nil
}

type Ipcgrpc_SendDataClient interface {
	Send(*IpcRequest) error
	Recv() (*IpcReply, error)
	grpc.ClientStream
}

type ipcgrpcSendDataClient struct {
	grpc.ClientStream
}

func (x *ipcgrpcSendDataClient) Send(m *IpcRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *ipcgrpcSendDataClient) Recv() (*IpcReply, error) {
	m := new(IpcReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IpcgrpcServer is the server API for Ipcgrpc service.
type IpcgrpcServer interface {
	SendData(Ipcgrpc_SendDataServer) error
}

func RegisterIpcgrpcServer(s *grpc.Server, srv IpcgrpcServer) {
	s.RegisterService(&_Ipcgrpc_serviceDesc, srv)
}

func _Ipcgrpc_SendData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IpcgrpcServer).SendData(&ipcgrpcSendDataServer{stream})
}

type Ipcgrpc_SendDataServer interface {
	Send(*IpcReply) error
	Recv() (*IpcRequest, error)
	grpc.ServerStream
}

type ipcgrpcSendDataServer struct {
	grpc.ServerStream
}

func (x *ipcgrpcSendDataServer) Send(m *IpcReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *ipcgrpcSendDataServer) Recv() (*IpcRequest, error) {
	m := new(IpcRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Ipcgrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ipcgrpc.Ipcgrpc",
	HandlerType: (*IpcgrpcServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendData",
			Handler:       _Ipcgrpc_SendData_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "ipc.proto",
}

func init() { proto.RegisterFile("ipc.proto", fileDescriptor_ipc_7f394efc4e3a878d) }

var fileDescriptor_ipc_7f394efc4e3a878d = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x2c, 0x48, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0x2c, 0x48, 0x4e, 0x2f, 0x2a, 0x48, 0x56, 0x52,
	0xe2, 0xe2, 0xf2, 0x2c, 0x48, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62,
	0x4d, 0x2a, 0x2e, 0x4a, 0x2d, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0x70, 0x94, 0x14,
	0xb8, 0x38, 0xc0, 0x6a, 0x0a, 0x72, 0x2a, 0x61, 0x2a, 0x8a, 0x91, 0x55, 0x14, 0x1b, 0x39, 0x73,
	0xb1, 0x7b, 0x42, 0x0c, 0x14, 0xb2, 0xe0, 0xe2, 0x08, 0x4e, 0xcd, 0x4b, 0x71, 0x49, 0x2c, 0x49,
	0x14, 0x12, 0xd6, 0x83, 0x5a, 0xa3, 0x87, 0xb0, 0x43, 0x4a, 0x10, 0x55, 0xb0, 0x20, 0xa7, 0x52,
	0x89, 0x41, 0x83, 0xd1, 0x80, 0x31, 0x89, 0x0d, 0xec, 0x34, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x22, 0xaf, 0x9b, 0xfb, 0xa7, 0x00, 0x00, 0x00,
}
